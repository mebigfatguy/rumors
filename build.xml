<!--
/*
 * rumors - a simple discovery/connection protocol
 * Copyright 2011 MeBigFatGuy.com
 * Copyright 2011 Dave Brosius
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); 
 * you may not use this file except in compliance with the License. 
 * You may obtain a copy of the License at 
 * 
 *    http://www.apache.org/licenses/LICENSE-2.0 
 *    
 * Unless required by applicable law or agreed to in writing, 
 * software distributed under the License is distributed on an "AS IS" BASIS, 
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. 
 * See the License for the specific language governing permissions and limitations 
 * under the License. 
 */
 -->
<project name="rumors" default="jar">

    <property file="user.properties"/>
    <property file="build.properties"/>

    <property name="src.dir" value="${basedir}/src"/>
    <property name="classes.dir" value="${basedir}/classes"/>
    <property name="etc.dir" value="${basedir}/etc"/>
	<property name="lib.dir" value="${basedir}/lib" />
    <property name="javadoc.dir" value="${basedir}/javadoc"/>
    <property name="javac.source" value="1.6"/>
    <property name="javac.target" value="1.6"/>
    <property name="javac.deprecation" value="on"/>
    <property name="javac.debug" value="on"/>
	<property name="rumors.version" value="0.0.1"/>
	
	<property name="junit.version" value="4.10" />
    <property name="slf4j-api.version" value="1.6.1"/>

	<property name="junit-url" value="http://repo1.maven.org/maven2/junit/junit/${junit.version}/junit-${junit.version}.jar" />
    <property name="slf4j-api-url" value="http://repo1.maven.org/maven2/org/slf4j/slf4j-api/${slf4j-api.version}/slf4j-api-${slf4j-api.version}.jar"/>

	<target name="junit-check">
		<available file="${basedir}/lib/junit-${junit.version}.jar" property="junit-exists" />
	</target>
    <target name="slf4j-api-check">
        <available file="${basedir}/lib/slf4j-api-${slf4j-api.version}.jar" property="slf4j-api-exists"/>
    </target>

	<target name="install-junit" depends="junit-check" unless="junit-exists" description="installs junit.jar into lib">
		<get src="${junit-url}" dest="${lib.dir}/junit-${junit.version}.jar" verbose="true" ignoreerrors="true" />
	</target>
    <target name="install-slf4j-api" depends="slf4j-api-check" unless="slf4j-api-exists" description="installs slf4j-api.jar into lib">
        <get src="${slf4j-api-url}" dest="${basedir}/lib/slf4j-api-${slf4j-api.version}.jar" verbose="true" ignoreerrors="true"/>
    </target>

	<target name="pull" depends="install-junit,install-slf4j-api" description="pull 3rdparty jars to the lib directory" />
	
	<path id="rumors.classpath">
		<pathelement location="${lib.dir}/junit-${junit.version}.jar" />
		<pathelement location="${lib.dir}/slf4j-api-${slf4j-api.version}.jar" />
	</path>
	
    <target name="clean" description="removes all generated collateral">
        <delete dir="${classes.dir}"/>
        <delete dir="${javadoc.dir}"/>
        <delete file="${basedir}/rumors-${rumors.version}.jar"/>
        <delete file="${basedir}/rumors-src-${rumors.version}.zip"/>
    </target>
	
    <target name="-init" description="prepares repository for a build">
        <mkdir dir="${classes.dir}"/>
        <mkdir dir="${javadoc.dir}"/>
		<mkdir dir="${lib.dir}" />
    	<copy file="${etc.dir}/rumors.xsd" tofile="${classes.dir}"/>
    </target>
	
	<target name="validate" depends="-init" description="validates the xml file">
		<schemavalidate file="${etc.dir}/rumors.xml">
			<schema namespace="http://rumors.mebigfatguy.com/1.0/rumors"
			        file="${etc.dir}/rumors.xsd" />
		</schemavalidate>
	</target>
	
    <target name="compile" depends="-init" description="compiles java files">
        <javac  srcdir="${src.dir}"
                destdir="${classes.dir}"
                source="${javac.source}"
                target="${javac.target}"
                deprecation="${javac.deprecation}"
                debug="${javac.debug}"
                includeantruntime="false">
            <classpath refid="rumors.classpath"/>
        </javac>
    </target>
	
    <target name="build" depends="clean, -init, pull, validate, compile" description="compiles the code">
    </target>
	
	<target name="jar" depends="build" description="produces the rumors jar file">
        <jar destfile="${basedir}/rumors-${rumors.version}.jar">
            <fileset dir="${classes.dir}">
                <include name="**/*.class"/>
            </fileset>
            <manifest>
                <attribute name="rumors-version" value="${rumors.version}"/>
                <attribute name="Bundle-ManifestVersion" value="2"/>
                <attribute name="Bundle-Name" value="Rumors"/>
                <attribute name="Bundle-SymbolicName" value="rumors; singleton:=true"/>
                <attribute name="Bundle-Version" value="2"/>                
                <attribute name="Bundle-ClassPath" value="."/>
                <attribute name="Bundle-Vendor" value="MeBigFatGuy.com"/>
                <attribute name="Bundle-ActivationPolicy" value="lazy"/>
            </manifest>
        </jar>
	</target>
	
    <target name="srczip" description="builds the source distribution zip file">
        <zip destfile="${basedir}/rumors-src-${rumors.version}.zip" basedir="${basedir}">
            <fileset dir="${src.dir}">
                <include name="**/*.java"/>
                <include name="**/*.xml"/>
                <include name="**/*.xsd"/>
                <include name="**/*.license"/>
            </fileset>
        </zip>
    </target>
	
    <target name="javadoc" depends="-init" description="build the javadoc for the project">
        <javadoc packagenames="com.mebigfatguy.*"
                 sourcepath="${src.dir}"
                 classpathref="rumors.classpath"
                 destdir="${javadoc.dir}"
                 windowtitle="rumors api">
            <doctitle><![CDATA[<h1>rumors javadoc</h1>]]></doctitle>
            <bottom><![CDATA[<i>Copyright &#169; 2011-2011 MeBigFatGuy.com. All Rights Reserved.</i>]]></bottom>
        </javadoc>
    </target>

    <target name="release" depends="build, srczip, javadoc" description="prepares everything for a release"/>

</project>